name: Build and Release

on:
  workflow_dispatch: {}
  push:
    tags:
      - '*'

jobs:
  build:
    name: build

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-22.04', 'macos-11', 'windows-latest' ]
        # Currently this is a dummy variable to make the migration to
        # multi-arch builds easier in the future
        arch: [ 'x86_64' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt --yes install qt6-base-dev libgl1-mesa-glx 

      - name: Install MacOS dependencies
        if: runner.os == 'macOS'
        run: |
          echo "macOS setup"

      - name: Install Windows dependencies
        if: runner.os == 'Windows'
        # Currently pyQt6-Qt6 does not ship with a correctly formatted 
        # path for RECORD on windows, to workaround this we can run pdm install twice
        # and rely on the cached download. 
        # For more information: https://github.com/pdm-project/pdm/issues/1223
        continue-on-error: true
        run: |
          pip install pdm
          pdm install

      - name: Install Python dependencies
        run: |
          pip install pdm
          pdm install

      - name: Run Pyinstaller
        run: pdm run pyinstaller BeeRef.spec

      - name: Compress artifact
        shell: bash
        env:
          ARTIFACT_PATH: dist/BeeRef-${{ github.ref_name }}-${{ runner.os }}-${{ matrix.arch }}.tar.gz
        run: |
          EXECUTABLE_PATH="dist/BeeRef"

          if [ "$RUNNER_OS" == "Linux" ]; then
            EXECUTABLE_PATH="$EXECUTABLE_PATH"
          elif [ "$RUNNER_OS" == "macOS" ]; then
            EXECUTABLE_PATH="$EXECUTABLE_PATH.app"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            EXECUTABLE_PATH="$EXECUTABLE_PATH.exe"
          else
            echo "Unsupported OS: '$RUNNER_OS'"
            exit 1
          fi

          echo "Packaging '$ARTIFACT_PATH' from '$EXECUTABLE_PATH'"
          tar -czvf "$ARTIFACT_PATH" "$EXECUTABLE_PATH"

          echo "ARTIFACT_PATH=$ARTIFACT_PATH" >> $GITHUB_ENV

      - name: Upload temporary artifacts for branch builds
        if: startsWith(github.ref, 'refs/heads/')
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.ARTIFACT_PATH }}
          retention-days: 1

      - name: Upload release artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1        
        with:
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true

          generateReleaseNotes: true
          name: "${{ github.ref_name }}"
          artifacts: "${{ env.ARTIFACT_PATH }}"
